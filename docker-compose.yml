version: '3.8'

services:
  ros2_qualisys:
    container_name: ros2_qualisys
    # runtime: nvidia
    # user: $(id -u $USER):$(id -g $USER)
    privileged: true
    ports:
      - "14570:14570/udp"
      - "22222:22222/udp"
      - "7510:7510/udp"
      - "7511:7511/udp"
      - "7400:7400/udp"
      - "7555:7555/udp"
      # - "7415:7415/udp"
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - "./:/workspaces/ros2_ws/src/ros2_qualisys_driver/"
      # - "/tmp/.X11-unix:/tmp/.X11-unix:ro"
    network_mode: "host"
    # environment:
      # DISPLAY: ${DISPLAY}
      # DISPLAY: 0
      # QT_X11_NO_MITSHM: 1
      # LOCAL_USER_ID: 1001
      # LIBGL_ALWAYS_INDIRECT: 1
      # NVIDIA_VISIBLE_DEVICES: all
      # NVIDIA_DRIVER_CAPABILITIES: all
    stdin_open: true
    tty: true
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE
    # entrypoint: ["/bin/bash", "-c", "/startup.sh && cd /workspaces/ros2_ws/ && source install/setup.bash && ros2 run mavros install_geographiclib_datasets.sh && ros2 run mavros mavros_node --ros-args --params-file px4_mavros_config.yaml"]
    # entrypoint: ["/bin/bash", "-c", "/startup.sh && cd /workspaces/ros2_ws/ && source install/setup.bash && ros2 run mavros install_geographiclib_datasets.sh && /bin/bash"]
    # entrypoint: ["/bin/bash", "-c", "/startup.sh && cd /workspaces/ros2_ws/ && source install/setup.bash && ros2 run mavros install_geographiclib_datasets.sh && ros2 launch mavros_observer_launch.py"]
    # entrypoint: ["/bin/bash", "-c", "/startup.sh]
    
    # command: ["/bin/bash"]
